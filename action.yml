name: "WXT Submit"
author: "ryohidaka <39184410+ryohidaka@users.noreply.github.com>"
description: "A GitHub Action that submits new versions of an extension created with WXT for review."
inputs:
  # Common Options
  dry-run:
    description: "Dry Run Flag"
    required: false
    default: false

  # Inputs for Chrome Extension
  chrome:
    required: false
    default: false
  chrome-extension-id:
    description: "Chrome Extension ID"
  chrome-client-id:
    description: "Chrome Client ID"
  chrome-client-secret:
    description: "Chrome Client Secret"
  chrome-refresh-token:
    description: "Chrome Refresh Token"

  # Inputs for Firefox Addon
  firefox:
    required: false
    default: false
  firefox-extension-id:
    description: "Firefox Extension ID"
  firefox-jwt-issuer:
    description: "Firefox JWT Issuer"
  firefox-jwt-secret:
    description: "Firefox JWT Secret"

  # Inputs for Edge Extension
  edge:
    required: false
    default: false
  edge-product-id:
    description: "Edge Product ID"
  edge-client-id:
    description: "Edge Client ID"
  edge-client-secret:
    descriptoon: "Edge Client Secret"
  edge-access-token-url:
    description: "Edge Access Token URL"
runs:
  using: "composite"
  steps:
    - name: Check if Dryrun is enabled
      run: |
        if [ "${{ inputs.dry-run }}" == 'true' ]; then
          echo "Dryrun mode is enabled"
        else
          echo "Dryrun mode is disabled"
        fi
      shell: bash

    - name: Check required inputs for Chrome Extension
      if: ${{ inputs.chrome == 'true' }}
      run: |
        if [[ -z "${{ inputs.chrome-extension-id }}" ]]; then
          echo "Error: Chrome Extension ID is required."
          exit 1
        fi
        if [[ -z "${{ inputs.chrome-client-id }}" ]]; then
          echo "Error: Chrome Client ID is required."
          exit 1
        fi
        if [[ -z "${{ inputs.chrome-client-secret }}" ]]; then
          echo "Error: Chrome Client Secret is required."
          exit 1
        fi
        if [[ -z "${{ inputs.chrome-refresh-token }}" ]]; then
          echo "Error: Chrome Refresh Token is required."
          exit 1
        fi
        echo "All required inputs for Chrome Extension are provided."
      shell: bash

    - name: Check required inputs for Firfox Addon
      if: ${{ inputs.firefox == 'true' }}
      run: |
        if [[ -z "${{ inputs.firefox-extension-id }}" ]]; then
          echo "Error: Firefox Extension ID is required."
          exit 1
        fi
        if [[ -z "${{ inputs.firefox-jwt-issuer }}" ]]; then
          echo "Error: Firefox JWT Issuer is required."
          exit 1
        fi
        if [[ -z "${{ inputs.firefox-jwt-secret }}" ]]; then
          echo "Error: Firefox JWT Secret is required."
          exit 1
        fi
        echo "All required inputs for Chrome Extension are provided."
      shell: bash

    - name: Check required inputs for Edge Extension
      if: ${{ inputs.edge == 'true' }}
      run: |
        if [[ -z "${{ inputs.edge-product-id }}" ]]; then
          echo "Error: Edge Product ID is required."
          exit 1
        fi
        if [[ -z "${{ inputs.edge-client-id }}" ]]; then
          echo "Error: Edge Client ID is required."
          exit 1
        fi
        if [[ -z "${{ inputs.edge-client-secret }}" ]]; then
          echo "Error: Edge Client Secret is required."
          exit 1
        fi
        if [[ -z "${{ inputs.edge-access-token-url }}" ]]; then
          echo "Error: Edge Access Token URL is required."
          exit 1
        fi
        echo "All required inputs for Edge Extension are provided."
      shell: bash

    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v3
      with:
        version: "latest"

    - uses: actions/setup-node@v4
      with:
        node-version: latest
        cache: "pnpm"

    - name: Install dependencies
      run: pnpm install
      shell: bash

    - name: Submit to Chrome
      if: ${{ inputs.chrome == 'true' }}
      run: |
        pnpm zip
        pnpm wxt submit \
          ${{ inputs.dry-run == 'true' && '--dry-run' || '' }} \
          --chrome-zip .output/*-chrome.zip
      shell: bash
      env:
        CHROME_EXTENSION_ID: ${{ inputs.chrome-extension-id }}
        CHROME_CLIENT_ID: ${{ inputs.chrome-client-id }}
        CHROME_CLIENT_SECRET: ${{ inputs.chrome-client-secret }}
        CHROME_REFRESH_TOKEN: ${{ inputs.chrome-refresh-token }}

    - name: Submit to Firefox
      if: ${{ inputs.firefox == 'true' }}
      run: |
        pnpm zip:firefox
        pnpm wxt submit \
          ${{ inputs.dry-run == 'true' && '--dry-run' || '' }} \
          --firefox-zip .output/*-firefox.zip --firefox-sources-zip .output/*-sources.zip
      shell: bash
      env:
        FIREFOX_EXTENSION_ID: ${{ inputs.firefox-extension-id }}
        FIREFOX_JWT_ISSUER: ${{ inputs.firefox-jwt-issuer }}
        FIREFOX_JWT_SECRET: ${{ inputs.firefox-jwt-secret }}

    - name: Submit to Edge
      if: ${{ inputs.edge == 'true' }}
      run: |
        pnpm zip
        pnpm wxt submit \
          ${{ inputs.dry-run == 'true' && '--dry-run' || '' }} \
          --edge-zip .output/*-chrome.zip
      shell: bash
      env:
        EDGE_PRODUCT_ID: ${{ inputs.edge-product-id }}
        EDGE_CLIENT_ID: ${{ inputs.edge-client-id }}
        EDGE_CLIENT_SECRET: ${{ inputs.edge-client-secret }}
        EDGE_ACCESS_TOKEN_URL: ${{ inputs.edge-access-token-url }}
